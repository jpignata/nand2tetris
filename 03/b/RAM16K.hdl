// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    RAM4K(in=in, load=loadr0, out=r0, address[0..11]=address[0..11]);
    RAM4K(in=in, load=loadr1, out=r1, address[0..11]=address[0..11]);
    RAM4K(in=in, load=loadr2, out=r2, address[0..11]=address[0..11]);
    RAM4K(in=in, load=loadr3, out=r3, address[0..11]=address[0..11]);

    DMux4Way(in=load, a=loadr0, b=loadr1, c=loadr2, d=loadr3,
             sel[0..1]=address[12..13]);
    Mux4Way16(a=r0, b=r1, c=r2, d=r3, sel[0..1]=address[12..13], out=out);
}
