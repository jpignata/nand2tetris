// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    /*
    Not(in=sel[1], out=nsel0);
    Not(in=sel[0], out=nsel1);

    And(a=in, b=sel[1], out=inAndSel0);
    And(a=in, b=sel[0], out=inAndSel1);
    And(a=in, b=nsel0, out=inAndNotSel0);
    And(a=in, b=nsel1, out=inAndNotSel1);

    And(a=inAndNotSel0, b=inAndNotSel1, out=a);
    And(a=inAndNotSel0, b=inAndSel1, out=b);
    And(a=inAndSel0, b=inAndNotSel1, out=c);
    And(a=inAndSel0, b=inAndSel1, out=d);
    */

    DMux(in=in, sel=sel[1], a=s1, b=s2);

    DMux(in=s1, sel=sel[0], a=a, b=b);
    DMux(in=s2, sel=sel[0], a=c, b=d);
}

/*

in sel0 sel1 a b c d
0  0    0    0 0 0 0
0  0    1    0 0 0 0
0  1    1    0 0 0 0
0  1    0    0 0 0 0
1  0    0    1 0 0 0
1  0    1    0 1 0 0
1  1    0    0 0 1 0
1  1    1    0 0 0 1

a = 1 = in AND NOT(sel0) AND NOT(sel1)
b = 1 = in AND NOT(sel0) AND sel1
c = 1 = in AND sel0 AND NOT(sel1)
d = 1 = in AND sel0 AND sel1

*/
